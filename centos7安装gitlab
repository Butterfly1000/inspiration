1.配置yum源
vim /etc/yum.repos.d/gitlab-ce.repo

复制以下内容
[gitlab-ce]
name=gitlab-ce
#baseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/
baseurl=https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el$releasever/
Repo_gpgcheck=0
Enabled=1
Gpgkey=https://packages.gitlab.com/gpg.key  

2.更新本地yum缓存
sudo yum makecache

3.安装GitLab社区版
 yum install -y gitlab-ce --nogpgcheck
 或
 sudo EXTERNAL_URL="https://gitlab.example.com" yum install -y gitlab-ce

这里EXTERNAL_URL="http://gitlab.example.com"
如果不需要https方式的话可以只用http
服务器地址可以设置成本机IP
端口默认是80，可以设置任意未占用的其他端口
例如 EXTERNAL_URL="http://192.168.1.10:8899"。

报错：Public key for gitlab-ce-12.0.2-ce.0.el7.x86_64.rpm is not installed
原因：可能是由于该镜像不是从官方下载导致的，可以在安装命令后面加--nogpgcheck
解决方案：--nogpgcheck   禁掉GPG验证检查
sudo EXTERNAL_URL="http://192.168.1.10:8899" yum install -y gitlab-ce --nogpgcheck
成功！

4.GitLab常用命令
sudo gitlab-ctl start    # 启动所有 gitlab 组件；
sudo gitlab-ctl stop        # 停止所有 gitlab 组件；
sudo gitlab-ctl restart        # 重启所有 gitlab 组件；
sudo gitlab-ctl status        # 查看服务状态；
sudo gitlab-ctl reconfigure        # 启动服务；
sudo vim /etc/gitlab/gitlab.rb        # 修改默认的配置文件；
gitlab-rake gitlab:check SANITIZE=true --trace    # 检查gitlab；
sudo gitlab-ctl tail        # 查看日志；

5.修改gitlab配置文件指定服务器ip和自定义端口：
vim  /etc/gitlab/gitlab.rb
查找external_url，修改后面的内容(例如:http://ip地址:端口号)
ps:注意这里设置的端口不能被占用，默认是8080端口，如果8080已经使用，请自定义其它端口，并在防火墙设置开放相对应得端口

6.重置并启动GitLab
  执行：
  gitlab-ctl reconfigure
  gitlab-ctl restart

7.遇到因为启动gitlab,cpu直接飙升的情况（通过top/htop查看）
 a.停止gitlab
 gitlab-ctl stop  #这个动作很重要，cpu瞬间降下去

 b.查看开机启动状态
 #systemctl list-unit-files | grep gitlab
 结果：
 gitlab-runsvdir.service  enabled
 表明开机启动，这样下次重启还是会这样，所以关闭开机启动
 #systemctl disable gitlab-runsvdir.service
 
 c.卸载
 yum remove gitlab-ce

8.注意
 依照上面的源码编译，单核，内存<=2G,服务器很可能会崩溃。=》这个真是硬伤，很难
 原因：这种情况可能就是gitlab占用内存过大，
 解决方案（单核2G内存还是很难）：
 vim /etc/gitlab/gitlab.rb
 unicorn['worker_processes'] = 2
 重新加载配置
 重启gitlab
（建议worker=CPU核数+1）
 
★常见问题：
1.执行配置文件时
“ruby_block[wait for redis service socket] action run”无法继续执行下去
解决方案：
systemctl restart gitlab-runsvdir
gitlab-ctl reconfigure

2.安装卡住（sudo gitlab-ctl reconfigure后）
这基本是内存不足导致
* execute[clear the gitlab-rails cache] action run（这个卡了很久）
================================================================================
Error executing action `run` on resource 'execute[clear the gitlab-rails cache]'
================================================================================

3.当我们成功安装、配置 GitLab 后，不一定就万事大吉了，访问 GitLab 的时候可能会出现如下错误
502
GitLab 所需内存最低为 4G，若服务器配置太低会出现 502 错误

4.GitLab 新装或重启后，需要等待 1 分钟才能使用
对于单核 CPU 的服务器，Unicorn and Sidekiq 服务启动最少需要一分钟

★总结：
没有高于4G内存，尽量不要安装gitlab，在另一篇文章将尝试使用docker安装。

原文/参考链接：
https://www.jianshu.com/p/5b0da0bfe031
https://blog.csdn.net/justlpf/article/details/80681332
https://blog.csdn.net/duyusean/article/details/80011540
https://blog.csdn.net/qq_34316514/article/details/104967440
https://www.cnblogs.com/youzhibing/p/12572598.html



