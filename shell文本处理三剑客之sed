sed(Stream Editor)，流编辑器，对标准输出或文件逐行进行处理。
原理：
处理时，把当前处理的行存储在临时缓冲区中，称为”模式空间”（ oattern space），接看用sed命令处理缓冲区中的内容，处理成后，把缓冲区的内容送往屏幕显示。
逐行处理，直到文件末;不改变文件内容，除非使用了写入的命令，将内容更新。

常用命令功能：
p：print 
d：delete
=：打印匹配行的行号
-n 取消默认的完整输出，只要需要的  
-e 允许多项编辑
-i 修改文件内容
-r 不需要转义

注意：& 符号在sed命令中代表上次匹配的结果

常用的命令展示：
查：
只打印第三行
sed -n '3p' /var/log/yum.log

只查看文件的第3行到第9行
sed -n '3,9p' /var/log/yum.log

过滤特定字符串,显示正行内容（查询内容要放在//里面，如查询root，则/root/）
sed -n '/root/p' yum.log

显示包含"hhh"的行到包含"omc"的行之间的行(如果只是hhh和omc多次出现，并出现交叉，那么多会查询出，但重叠处不重复。)
sed -n '/hhh/,/omc/p' yum.log

打印1-5行，并显示行号（内容+行号。注意使用方式，所有的行号都会出现，但内容会出现在对应的行号上面。）
sed -n -e '1,5p' -e '=' yum.log

仅仅显示匹配字符串的行号（仅行号）
sed -n '/root/=' yum.log

打印匹配行的内容和符号【相当于后面又根据关键词查询了一次】（完全体）
sed -n -e '/root/p' -e '/root/=' yum.log

写：
用world 替换yum.log文件中的root【真实写入】


【参考/转】：https://www.cnblogs.com/ftl1012/p/sed.html
---------------------------------------------------------------------------------------------
命令功能列表：
命令  功能
a\  在当前行后添加一行或多行。多行时除最后一行外，每行末尾需用“\”续行
 
c\  用此符号后的新文本替换当前行中的文本。多行时除最后一行外，每行末尾需用"\"续行
 
i\  在当前行之前插入文本。多行时除最后一行外，每行末尾需用"\"续行
 
d   删除行
 
h   把模式空间里的内容复制到暂存缓冲区
 
H   把模式空间里的内容追加到暂存缓冲区
 
g   把暂存缓冲区里的内容复制到模式空间，覆盖原有的内容
 
G   把暂存缓冲区的内容追加到模式空间里，追加在原有内容的后面
 
l   列出非打印字符
 
p   打印行
 
n   读入下一输入行，并从下一条命令而不是第一条命令开始对其的处理
 
q   结束或退出sed
 
r   从文件中读取输入行
 
!   对所选行以外的所有行应用命令
 
s   用一个字符串替换另一个
 
g   在行内进行全局替换
 
w   将所选的行写入文件
 
x   交换暂存缓冲区与模式空间的内容
 
y   将字符替换为另一字符（不能对正则表达式使用y命令）
