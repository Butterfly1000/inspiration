基本的一些知识前面已有提到，另外的也可以通过菜鸟教程进行了解。
精讲篇会更有针对性。
★变量操作
$(变量名#匹配规则)   从变量开头始进行规则匹配，将符合的最短数据进行删除;
$(变量名##匹配规则)  从变量开头始进行规则匹配，将符合的最长数据进行删除;
$(变量名%匹配规则)   从变量结尾始进行规则匹配，将符合的最短数据进行删除;
$(变量名%%匹配规则)  从变量结尾始进行规则匹配，将符合的最长数据进行删除;
$(变量名/旧字符串/新字符串)   变量内容符合旧字符串，则第一个旧字符串替换成新字符串。
$(变量名//旧字符串/新字符串) 变量内容符合旧字符串，则所有旧字符串替换成新字符串。

演示：（注意*号的存在）
#!/bin/sh
sty='To be or not to be,this is a question';
sty_res=${sty#*be};
echo $sty_res;
结果:' or not to be,this is a question';

#!/bin/sh
sty='To be or not to be,this is a question';
sty_res=${sty##*be};
echo $sty_res;
结果:',this is a question'; (贪婪模式)

#!/bin/sh
sty='To be or not to be,this is a question';
sty_res=${sty%be*};
echo $sty_res;
结果:'To be or not to'; 

#!/bin/sh
sty='To be or not to be,this is a question';
sty_res=${sty%be*};
echo $sty_res;
结果:'To be or not to '; 

#!/bin/sh
sty='To be or not to be,this is a question';
sty_res=${sty%%be*};
echo $sty_res;
结果:'To ';(贪婪模式)

注:#必须搭配*be获取前面的数值，%必须搭配be*获取后面的数值。

#!/bin/sh
sty='To be or not to be , this is a question';
sty_res=${sty/be/being}
echo $sty_res;
结果:To being or not to be , this is a question

#!/bin/sh
sty='To be or not to be , this is a question';
sty_res=${sty//be/being}
echo $sty_res;
结果:To being or not to being , this is a question



