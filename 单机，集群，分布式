★单机：
单服务器，项目的所有内容都部署在一台服务器上，整个项目所有的服务都由这台服务器提供，这就是单机结构。

★集群：同一个业务，部署在多个服务器上（copy）。

每个服务器相当于集群的一个"节点"，每个"节点"内容一致，提供相同的服务，如果系统有处理压力时，再增加节点即可。

当然，为了更好提升效率，就需要一个"调度者",均衡各个节点的压力，即负载均衡服务器。

★分布式：一个业务分拆多个子业务，部署在不同的服务器上。

分布式结构就是将一个完整的系统，按照业务功能，拆分成一个个独立的子系统，在分布式结构中，每个子系统就被称为“服务”。
这些子系统能够独立运行在web容器中，它们之间通过RPC方式通信。

举个例子，假设需要开发一个在线商城。我们需要按照功能模块拆分成多个独立的服务，如：用户服务、产品服务、订单服务、后台管理服务、数据分析服务等等。
这一个个服务都是一个个独立的项目，可以独立运行。如果服务之间有依赖关系，那么通过RPC方式调用。

这样的好处有很多：
1.系统之间的耦合度大大降低，可以独立开发、独立部署、独立测试，系统与系统之间的边界非常明确，排错也变得相当容易，开发效率大大提升。
2.系统之间的耦合度降低，从而系统更易于扩展。我们可以针对性地扩展某些服务。
3.假设这个商城要搞一次大促，下单量可能会大大提升，因此我们可以针对性地提升订单系统、产品系统的节点数量，
而对于后台管理系统、数据分析系统而言，节点数量维持原有水平即可。
4.服务的复用性更高。比如，当我们将用户系统作为单独的服务后，该公司所有的产品都可以使用该系统作为用户系统，无需重复开发。

【作者：大闲人柴毛毛 链接：https://www.zhihu.com/question/20004877/answer/282033178】

★有趣的解释：
小饭店原来只有一个厨师，切菜洗菜备料炒菜全干。后来客人多了，厨房一个厨师忙不过来，又请了个厨师，两个厨师都能炒一样的菜，这两个厨师的关系是集群。
为了让厨师专心炒菜，把菜做到极致，又请了个配菜师负责切菜，备菜，备料，厨师和配菜师的关系是分布式，
一个配菜师也忙不过来了，又请了个配菜师，两个配菜师关系是集群。

【作者：张鹏飞 链接：https://www.zhihu.com/question/20004877/answer/112124929】


